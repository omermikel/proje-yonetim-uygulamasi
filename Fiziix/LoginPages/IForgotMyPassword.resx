<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2qk89LbWdjQAAAAASUVORK5CYII=
</value>
  </data>
</root>